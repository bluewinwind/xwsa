<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <import resource="spring-session-redis.xml"/>
    <import resource="spring-portal-session-aop.xml"/>

    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="SHA-512"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <bean id="cacheAuthorizationRealm" class="cn.com.xinxin.sass.session.auth.CacheAuthorizationRealm">
        <property name="userAclSessionRepository" ref="userAclSessionRepository"/>
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="cacheManager" ref="portalSessionRedisCacheManager"/>
    </bean>

    <!-- 权限管理器 -->
    <bean id="cacheSecurityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="cacheAuthorizationRealm"/>
            </list>
        </property>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="globalSessionTimeout" value="129600000"/>
        <property name="deleteInvalidSessions" value="true"/>

        <property name="sessionDAO" ref="portalSessionRepository"/>
        <property name="cacheManager" ref="portalSessionRedisCacheManager"/>
    </bean>

    <bean id="portalSessionRedisCacheManager" class="cn.com.xinxin.sass.session.repository.SassSessionRedisCacheManager">
        <property name="sessionRedisTemplate" ref="sessionRedisTemplate"/>
    </bean>

    <bean id="portalSessionRepository" class="cn.com.xinxin.sass.session.repository.SassSessionRepository">
        <property name="sessionRedisTemplate" ref="sessionRedisTemplate"/>
    </bean>

    <bean id="userAclSessionRepository" class="cn.com.xinxin.sass.session.repository.UserAclSessionRepository">
        <property name="sessionRedisTemplate" ref="sessionRedisTemplate"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager() -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="cacheSecurityManager"/>
    </bean>

    <!-- shiro 生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!--<aop:config proxy-target-class="true"/>-->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="cacheSecurityManager"/>
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
</beans>