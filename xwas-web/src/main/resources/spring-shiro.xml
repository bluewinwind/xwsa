<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">



    <!--&lt;!&ndash; 权限管理器 &ndash;&gt;-->
    <!--<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">-->
        <!--<property name="realms">-->
            <!--<list>-->
                <!--<ref bean="authorizationRealm"/>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="sessionManager" ref="sessionManager"/>-->
        <!--&lt;!&ndash;<property name="cacheManager" ref="redisCacheManager"/>&ndash;&gt;-->
    <!--</bean>-->

    <bean id="jwtTokenAuthorizingRealmRealm" class="cn.com.xinxin.sass.web.shiro.realm.AuthorizationRealm">
        <constructor-arg name="userService" ref="userServiceImpl"/>
        <!--<property name="cachingEnabled" value="true"/>-->
        <!--<property name="cacheManager" ref="portalSessionRedisCacheManager"/>-->
    </bean>

    <!-- 权限管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="jwtTokenAuthorizingRealmRealm"/>
            </list>
        </property>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>



    <bean id="portalSessionRedisCacheManager" class="cn.com.xinxin.sass.session.repository.SassSessionRedisCacheManager">
        <property name="sessionRedisTemplate" ref="sessionRedisTemplate"/>
    </bean>

    <bean id="portalSessionRepository" class="cn.com.xinxin.sass.session.repository.SassSessionRepository">
        <property name="sessionRedisTemplate" ref="sessionRedisTemplate"/>
    </bean>


    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="globalSessionTimeout" value="129600000"/>
        <property name="deleteInvalidSessions" value="true"/>

        <property name="sessionDAO" ref="portalSessionRepository"/>
        <property name="cacheManager" ref="portalSessionRedisCacheManager"/>
    </bean>

    <bean id="userAclSessionRepository" class="cn.com.xinxin.sass.session.repository.UserAclSessionRepository">
        <property name="sessionRedisTemplate" ref="sessionRedisTemplate"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager() -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <bean id="jwtTokenFilter" class="cn.com.xinxin.sass.web.shiro.filter.JWTTokenFilter"/>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/auth"/>
        <property name="successUrl" value="/"/>
        <property name="filters">
            <util:map>
                <!--<entry key="authc" value-ref="formAuthenticationFilter"/>-->
                <!--<entry key="logout" value-ref="portalLogoutFilter"/>-->
                <!--<entry key="kickout" value-ref="kickoutSessionControlFilter"/>-->
                <entry key="jwtFilter" value-ref="jwtTokenFilter"/>
            </util:map>
        </property>

        <!-- 访问地址的过滤规则，从上到下的优先级，如果有匹配的规则，就会返回，不会再进行匹配 -->
        <!--
         anno 任何人都可以访问
         authc 必须登录才可以访问，不包含rememberme
         user 登录用户才可以访问，包含rememberme
         perms 指定过滤规则
         -->
        <property name="filterChainDefinitions">
            <!--
            <value>
                /login = authc
                /logout = logout
                /static/** = anon
                /** = kickout,authc
            </value>
            -->
            <value>
                /auth = anon
                /register = anon
                /unauthorized = anon
                /static/** = anon
                /** = jwtFilter
            </value>
        </property>
        <property name="unauthorizedUrl" value="/unauthorized"/>
    </bean>

    <!-- shiro 生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!--<aop:config proxy-target-class="true"/>-->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
</beans>