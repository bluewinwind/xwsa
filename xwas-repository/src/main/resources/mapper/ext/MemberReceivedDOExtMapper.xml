<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~ Copyright 2020 www.xinxindigits.com
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of this software
  ~ and associated documentation files (the "Software"),to deal in the Software without restriction,
  ~ including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
  ~ and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
  ~ subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice
  ~ shall be included in all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  ~ INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  ~ PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  ~ HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  ~ WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  ~
  ~ Redistribution and selling copies of the software are prohibited, only if the authorization from xinxin digits
  ~ was obtained.Neither the name of the xinxin digits; nor the names of its contributors may be used to
  ~ endorse or promote products derived from this software without specific prior written permission.
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.xinxin.sass.repository.dao.MemberReceivedDOMapper">
    <resultMap id="BaseResultMapExt" type="cn.com.xinxin.sass.repository.model.MemberReceivedDO">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="task_id" jdbcType="VARCHAR" property="taskId" />
        <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
        <result column="user_id" jdbcType="VARCHAR" property="userId" />
        <result column="member_name" jdbcType="VARCHAR" property="memberName" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="department_id_list" jdbcType="VARCHAR" property="departmentIdList" />
        <result column="order_list" jdbcType="VARCHAR" property="orderList" />
        <result column="member_position" jdbcType="VARCHAR" property="memberPosition" />
        <result column="gender" jdbcType="INTEGER" property="gender" />
        <result column="mail" jdbcType="VARCHAR" property="mail" />
        <result column="is_leader_in_dept" jdbcType="VARCHAR" property="isLeaderInDept" />
        <result column="avatar" jdbcType="VARCHAR" property="avatar" />
        <result column="thumb_avatar" jdbcType="VARCHAR" property="thumbAvatar" />
        <result column="telephone" jdbcType="VARCHAR" property="telephone" />
        <result column="alias" jdbcType="VARCHAR" property="alias" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="ext_attr" jdbcType="LONGVARCHAR" property="extAttr" />
        <result column="qr_code" jdbcType="VARCHAR" property="qrCode" />
        <result column="external_profile" jdbcType="LONGVARCHAR" property="externalProfile" />
        <result column="external_position" jdbcType="VARCHAR" property="externalPosition" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="hide_mobile" jdbcType="INTEGER" property="hideMobile" />
        <result column="english_name" jdbcType="VARCHAR" property="englishName" />
        <result column="open_userid" jdbcType="VARCHAR" property="openUserid" />
        <result column="main_department" jdbcType="BIGINT" property="mainDepartment" />
        <result column="extension" jdbcType="VARCHAR" property="extension" />
        <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
        <result column="gmt_creator" jdbcType="VARCHAR" property="gmtCreator" />
        <result column="gmt_updated" jdbcType="TIMESTAMP" property="gmtUpdated" />
        <result column="gmt_updater" jdbcType="VARCHAR" property="gmtUpdater" />
        <result column="deleted" jdbcType="TINYINT" property="deleted" />
    </resultMap>
    <sql id="Base_Column_List_Ext">
        id, task_id, tenant_id, user_id, member_name, mobile, department_id_list, order_list,
    member_position, gender, mail, is_leader_in_dept, avatar, thumb_avatar, telephone,
    alias, status, ext_attr, qr_code, external_profile, external_position, address, hide_mobile,
    english_name, open_userid, main_department, extension, gmt_created, gmt_creator,
    gmt_updated, gmt_updater, deleted
    </sql>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into member_received (task_id, tenant_id,
        user_id, member_name, mobile,
        department_id_list, order_list, member_position,
        gender, mail, is_leader_in_dept,
        avatar, thumb_avatar, telephone,
        alias, status, ext_attr,
        qr_code, external_profile, external_position,
        address, hide_mobile, english_name,
        open_userid, main_department, gmt_creator)
        values
        <foreach collection="memberReceivedDOS" item="item" index="index" separator=",">
            (#{item.taskId,jdbcType=VARCHAR}, #{item.tenantId,jdbcType=VARCHAR},
            #{item.userId,jdbcType=VARCHAR}, #{item.memberName,jdbcType=VARCHAR}, #{item.mobile,jdbcType=VARCHAR},
            #{item.departmentIdList,jdbcType=VARCHAR}, #{item.orderList,jdbcType=VARCHAR},
            #{item.memberPosition,jdbcType=VARCHAR},
            #{item.gender,jdbcType=INTEGER}, #{item.mail,jdbcType=VARCHAR}, #{item.isLeaderInDept,jdbcType=VARCHAR},
            #{item.avatar,jdbcType=VARCHAR}, #{item.thumbAvatar,jdbcType=VARCHAR}, #{item.telephone,jdbcType=VARCHAR},
            #{item.alias,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}, #{item.extAttr,jdbcType=LONGVARCHAR},
            #{item.qrCode,jdbcType=VARCHAR}, #{item.externalProfile,jdbcType=LONGVARCHAR},
            #{item.externalPosition,jdbcType=VARCHAR},
            #{item.address,jdbcType=VARCHAR}, #{item.hideMobile,jdbcType=INTEGER}, #{item.englishName,jdbcType=VARCHAR},
            #{item.openUserid,jdbcType=VARCHAR}, #{item.mainDepartment,jdbcType=BIGINT},
            #{item.gmtCreator,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <select id="queryByTaskIdAndOrgIdAndDepartmentId" resultMap="BaseResultMapExt">
        select <include refid="Base_Column_List_Ext"/>
        from member_received
        where task_Id = #{taskId} and tenant_id = #{tenantId} and department_id_list like concat('%', #{departmentId}, '%')
        and deleted = 0
    </select>

</mapper>