<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.xinxin.sass.repository.dao.CustomerDOMapper">
  <resultMap id="BaseResultMapExt" type="cn.com.xinxin.sass.repository.model.CustomerDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="member_user_id" jdbcType="VARCHAR" property="memberUserId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="customer_type" jdbcType="INTEGER" property="customerType" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="union_id" jdbcType="VARCHAR" property="unionId" />
    <result column="customer_position" jdbcType="VARCHAR" property="customerPosition" />
    <result column="corp_name" jdbcType="VARCHAR" property="corpName" />
    <result column="corp_full_name" jdbcType="VARCHAR" property="corpFullName" />
    <result column="external_profile" jdbcType="LONGVARCHAR" property="externalProfile" />
    <result column="follow_user" jdbcType="LONGVARCHAR" property="followUser" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="extension" jdbcType="VARCHAR" property="extension" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_creator" jdbcType="VARCHAR" property="gmtCreator" />
    <result column="gmt_updated" jdbcType="TIMESTAMP" property="gmtUpdated" />
    <result column="gmt_updater" jdbcType="VARCHAR" property="gmtUpdater" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List_Ext">
    id, tenant_id, member_user_id, user_id, customer_name, avatar, customer_type, gender, union_id, customer_position,
    corp_name, corp_full_name, external_profile, follow_user, status, task_id, extension, 
    gmt_created, gmt_creator, gmt_updated, gmt_updater, deleted
  </sql>

  <select id="selectByOrgIdAndUserId" resultMap="BaseResultMapExt">
    select <include refid="Base_Column_List_Ext"/>
    from customer
    where tenant_id = #{tenantId} and user_id in
    <foreach collection="userIdS" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
    and deleted = 0
  </select>

  <insert id="insertBatch" parameterType="java.util.List">
    insert into customer (tenant_id, member_user_id, user_id,
      customer_name, avatar, customer_type,
      gender, union_id, customer_position,
      corp_name, corp_full_name, external_profile,
      follow_user, status, task_id,
      extension, gmt_created, gmt_creator,
      gmt_updated, gmt_updater
      )
    values
    <foreach collection="customerDOS" item="item" index="index" separator=",">
      (#{item.tenantId,jdbcType=VARCHAR},#{item.memberUserId,jdbcType=VARCHAR}, #{item.userId,jdbcType=VARCHAR},
      #{item.customerName,jdbcType=VARCHAR}, #{item.avatar,jdbcType=VARCHAR}, #{item.customerType,jdbcType=INTEGER},
      #{item.gender,jdbcType=INTEGER}, #{item.unionId,jdbcType=VARCHAR}, #{item.customerPosition,jdbcType=VARCHAR},
      #{item.corpName,jdbcType=VARCHAR}, #{item.corpFullName,jdbcType=VARCHAR}, #{item.externalProfile,jdbcType=LONGVARCHAR},
      #{item.followUser,jdbcType=LONGVARCHAR}, #{item.status,jdbcType=VARCHAR}, #{item.taskId,jdbcType=VARCHAR},
      #{item.extension,jdbcType=VARCHAR}, #{item.gmtCreated,jdbcType=TIMESTAMP}, #{item.gmtCreator,jdbcType=VARCHAR},
      #{item.gmtUpdated,jdbcType=TIMESTAMP}, #{item.gmtUpdater,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>

  <update id="updateBatch" parameterType="java.util.List">
    <foreach collection="customerDOS" item="item" index="index" separator=";">
      update customer
      <set>
        <if test="item.tenantId != null">
          tenant_id = #{item.tenantId,jdbcType=VARCHAR},
        </if>
        <if test="item.memberUserId != null">
          member_user_id = #{item.memberUserId,jdbcType=VARCHAR},
        </if>
        <if test="item.userId != null">
          user_id = #{item.userId,jdbcType=VARCHAR},
        </if>
        <if test="item.customerName != null">
          customer_name = #{item.customerName,jdbcType=VARCHAR},
        </if>
        <if test="item.avatar != null">
          avatar = #{item.avatar,jdbcType=VARCHAR},
        </if>
        <if test="item.customerType != null">
          customer_type = #{item.customerType,jdbcType=INTEGER},
        </if>
        <if test="item.gender != null">
          gender = #{item.gender,jdbcType=INTEGER},
        </if>
        <if test="item.unionId != null">
          union_id = #{item.unionId,jdbcType=VARCHAR},
        </if>
        <if test="item.customerPosition != null">
          customer_position = #{item.customerPosition,jdbcType=VARCHAR},
        </if>
        <if test="item.corpName != null">
          corp_name = #{item.corpName,jdbcType=VARCHAR},
        </if>
        <if test="item.corpFullName != null">
          corp_full_name = #{item.corpFullName,jdbcType=VARCHAR},
        </if>
        <if test="item.externalProfile != null">
          external_profile = #{item.externalProfile,jdbcType=LONGVARCHAR},
        </if>
        <if test="item.followUser != null">
          follow_user = #{item.followUser,jdbcType=LONGVARCHAR},
        </if>
        <if test="item.status != null">
          status = #{item.status,jdbcType=VARCHAR},
        </if>
        <if test="item.taskId != null">
          task_id = #{item.taskId,jdbcType=VARCHAR},
        </if>
        <if test="item.extension != null">
          extension = #{item.extension,jdbcType=VARCHAR},
        </if>
        <if test="item.gmtCreated != null">
          gmt_created = #{item.gmtCreated,jdbcType=TIMESTAMP},
        </if>
        <if test="item.gmtCreator != null">
          gmt_creator = #{item.gmtCreator,jdbcType=VARCHAR},
        </if>
        <if test="item.gmtUpdated != null">
          gmt_updated = #{item.gmtUpdated,jdbcType=TIMESTAMP},
        </if>
        <if test="item.gmtUpdater != null">
          gmt_updater = #{item.gmtUpdater,jdbcType=VARCHAR},
        </if>
        <if test="item.deleted != null">
          deleted = #{item.deleted,jdbcType=TINYINT},
        </if>
      </set>
      where id = #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>

  <select id="selectPageByOrgIdAndMemberUserIdSAndTimeAndCustName" resultMap="BaseResultMapExt">
    select <include refid="Base_Column_List_Ext"/>
    from customer
    <where>
      deleted = 0 and tenant_id = #{tenantId}
      <if test="@org.apache.commons.collections4.CollectionUtils@isNotEmpty(memberUserIdS)">
        and member_user_id in
        <foreach collection="memberUserIdS" item="item" index="index" open="(" close=")" separator=",">
          #{item}
        </foreach>
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(startTime)">
        <![CDATA[and gmt_created >= #{startTime}]]>
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(endTime)">
        <![CDATA[and gmt_created <= #{endTime}]]>
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(customerName)">
        and customer_name like concat('%', #{customerName}, '%')
      </if>
      order by id limit #{index}, #{pageSize}
    </where>
  </select>

  <select id="selectCountByOrgIdAndMemberUserIdSAndTimeAndCustName" resultType="java.lang.Long">
    select count(id)
    from customer
    <where>
      deleted = 0 and tenant_id = #{tenantId}
      <if test="@org.apache.commons.collections4.CollectionUtils@isNotEmpty(memberUserIdS)">
        and member_user_id in
        <foreach collection="memberUserIdS" item="item" index="index" open="(" close=")" separator=",">
          #{item}
        </foreach>
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(startTime)">
        <![CDATA[and gmt_created >= #{startTime}]]>
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(endTime)">
        <![CDATA[and gmt_created <= #{endTime}]]>
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(customerName)">
        and customer_name like concat('%', #{customerName}, '%')
      </if>
    </where>
  </select>


  <select id="queryAllCustomerByPages" resultMap="BaseResultMapExt">
    select <include refid="Base_Column_List_Ext"/>
    from customer
    where  deleted = 0
  </select>

  <update id="updateInactiveStatus" parameterType="java.lang.String">
    update customer
    set `status` = 'INACTIVE'
    where tenant_id = #{tenantId} and user_id not in
    (SELECT user_id from customer_received where task_id = #{taskId});
  </update>

</mapper>