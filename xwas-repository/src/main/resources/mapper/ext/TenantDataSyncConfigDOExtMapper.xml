<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~ Copyright 2020 www.xinxindigits.com
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of this software
  ~ and associated documentation files (the "Software"),to deal in the Software without restriction,
  ~ including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
  ~ and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
  ~ subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice
  ~ shall be included in all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  ~ INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  ~ PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  ~ HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  ~ WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  ~
  ~ Redistribution and selling copies of the software are prohibited, only if the authorization from xinxin digits
  ~ was obtained.Neither the name of the xinxin digits; nor the names of its contributors may be used to
  ~ endorse or promote products derived from this software without specific prior written permission.
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.xinxin.sass.repository.dao.TenantDataSyncConfigDOMapper">
  <resultMap id="BaseResultMapExt" type="cn.com.xinxin.sass.repository.model.TenantDataSyncConfigDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="task_type" jdbcType="VARCHAR" property="taskType" />
    <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression" />
    <result column="fetched_seq_no" jdbcType="BIGINT" property="fetchedSeqNo" />
    <result column="count_ceiling" jdbcType="INTEGER" property="countCeiling" />
    <result column="time_interval" jdbcType="INTEGER" property="timeInterval" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="lock_flag" jdbcType="INTEGER" property="lockFlag" />
    <result column="lock_time" jdbcType="TIMESTAMP" property="lockTime" />
    <result column="extension" jdbcType="VARCHAR" property="extension" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_creator" jdbcType="VARCHAR" property="gmtCreator" />
    <result column="gmt_updated" jdbcType="TIMESTAMP" property="gmtUpdated" />
    <result column="gmt_updater" jdbcType="VARCHAR" property="gmtUpdater" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List_Ext">
    id, tenant_id, task_type, cron_expression, fetched_seq_no, count_ceiling, time_interval,
    status, lock_flag, lock_time, extension, gmt_created, gmt_creator, gmt_updated, gmt_updater,
    deleted
  </sql>
  <select id="selectByOrgIdAndTaskType" resultMap="BaseResultMapExt">
    select <include refid="Base_Column_List_Ext"/>
    from tenant_sync_config
    where tenant_id = #{tenantId} and task_type = #{taskType} and deleted = 0 limit 1;
  </select>

  <update id="updateLockByTenantIdAndTaskType" parameterType="java.lang.String">
    update tenant_sync_config
    set lock_flag = 1, lock_time = current_timestamp 
    where tenant_id = #{tenantId} and task_type = #{taskType} and lock_flag = 0 and deleted = 0
  </update>

  <update id="updateUnLockByTenantIdAndTaskType" parameterType="java.lang.String">
    update tenant_sync_config
    set lock_flag= 0
    where tenant_id = #{tenantId} and task_type = #{taskType} and deleted = 0
  </update>

  <select id="queryValidRecord" resultMap="BaseResultMapExt">
    select <include refid="Base_Column_List_Ext"/>
    from tenant_sync_config where deleted = 0 and status = 0
  </select>

  <select id="selectByTenantId" resultMap="BaseResultMapExt">
    select <include refid="Base_Column_List_Ext"/>
    from tenant_sync_config
    where tenant_id = #{tenantId} and deleted = 0 order by id;
  </select>

</mapper>