<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~ Copyright 2020 www.xinxindigits.com
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of this software
  ~ and associated documentation files (the "Software"),to deal in the Software without restriction,
  ~ including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
  ~ and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
  ~ subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice
  ~ shall be included in all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  ~ INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  ~ PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  ~ HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  ~ WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  ~
  ~ Redistribution and selling copies of the software are prohibited, only if the authorization from xinxin digits
  ~ was obtained.Neither the name of the xinxin digits; nor the names of its contributors may be used to
  ~ endorse or promote products derived from this software without specific prior written permission.
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.xinxin.sass.repository.dao.UserDOMapper">
  <resultMap id="BaseResultMapExt" type="cn.com.xinxin.sass.repository.model.UserDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="expire_date" jdbcType="TIMESTAMP" property="expireDate" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="gmt_creator" jdbcType="VARCHAR" property="gmtCreator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_updater" jdbcType="VARCHAR" property="gmtUpdater" />
    <result column="gmt_updated" jdbcType="TIMESTAMP" property="gmtUpdated" />
    <result column="extension" jdbcType="VARCHAR" property="extension" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List_Ext">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, account,tenant_id, name, gender, password, salt, expire_date, status, gmt_creator, gmt_created,
    gmt_updater, gmt_updated, extension, deleted
  </sql>

  <select id="selectByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from user
    where account = #{account,jdbcType=VARCHAR}
    and deleted=0
  </select>


  <select id="selectByAccountAndTenentId" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from user
    where account = #{account,jdbcType=VARCHAR}
    and tenant_id= #{tenantId,jdbcType=VARCHAR}
    and deleted=0
  </select>

  <select id="selectByAccounts"  parameterType="java.util.List" resultMap="BaseResultMapExt">

    select
    <include refid="Base_Column_List" />
    from user
    where account in
    <foreach collection="accounts" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </select>

  <delete id="deleteByAccounts"  parameterType="java.util.List">

    delete from user
    where account in
    <foreach collection="accounts" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </delete>

  <select id="findByConditionAndTenantId" resultMap="BaseResultMapExt">
    select id, account, name, gender, expire_date, status, gmt_creator, gmt_created,
     gmt_updated, extension from user
    <where>
    <if test="userDO.account != null and userDO.account != ''">
      and account = #{userDO.account,jdbcType=VARCHAR}
    </if>
      <if test="tenantId != null and tenantId != ''">
        and tenant_id = #{tenantId,jdbcType=VARCHAR}
      </if>
    <if test="userDO.name != null and userDO.name != ''">
      and name = #{userDO.name,jdbcType=VARCHAR}
    </if>
    <if test="userDO.gender != null" >
      and gender = #{userDO.gender,jdbcType=TINYINT}
    </if>
      <if test="userDO.status != null">
        and status = #{userDO.status,jdbcType=TINYINT}
      </if>
    <if test="startTime != null and endTime != null">
      and <![CDATA[gmt_created >= #{startTime,jdbcType=TIMESTAMP} and gmt_created < #{endTime,jdbcType=TIMESTAMP}]]>
    </if>
    </where>
  </select>

</mapper>