<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~ Copyright 2020 www.xinxindigits.com
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of this software
  ~ and associated documentation files (the "Software"),to deal in the Software without restriction,
  ~ including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
  ~ and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
  ~ subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice
  ~ shall be included in all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  ~ INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  ~ PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  ~ HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  ~ WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  ~
  ~ Redistribution and selling copies of the software are prohibited, only if the authorization from xinxin digits
  ~ was obtained.Neither the name of the xinxin digits; nor the names of its contributors may be used to
  ~ endorse or promote products derived from this software without specific prior written permission.
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.xinxin.sass.repository.dao.RoleMapper">
  <resultMap id="BaseResultMapExt" type="cn.com.xinxin.sass.repository.model.RoleDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="role_type" jdbcType="VARCHAR" property="roleType" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="gmt_creator" jdbcType="VARCHAR" property="gmtCreator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_updater" jdbcType="VARCHAR" property="gmtUpdater" />
    <result column="gmt_updated" jdbcType="TIMESTAMP" property="gmtUpdated" />
    <result column="extension" jdbcType="VARCHAR" property="extension" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List_Ext">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name,tenant_id, role_type, code, gmt_creator, gmt_created, gmt_updater, gmt_updated, extension,
    deleted
  </sql>

  <select id="findRoles" parameterType="java.util.List" resultMap="BaseResultMapExt">
    select
    <include refid="Base_Column_List_Ext"/>
    from role
    where id in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="findByCondition" parameterType="cn.com.xinxin.sass.repository.model.RoleDO" resultMap="BaseResultMapExt">
    select
    <include refid="Base_Column_List_Ext"/>
    from role
    where  1=1
    <if test="name != null and name != ''">
      and name like concat('%',#{name,jdbcType=VARCHAR},'%')
    </if>
    <if test="code != null and code != ''">
      and code like concat('%',#{code,jdbcType=VARCHAR},'%')
    </if>
    <if test="roleType != null and roleType != ''">
      and role_type = #{roleType,jdbcType=VARCHAR}
    </if>
    order by gmt_created desc
  </select>

  <select id="findByRoleCode" parameterType="java.lang.String" resultMap="BaseResultMapExt">
    select
    <include refid="Base_Column_List_Ext"/>
    from role
    where code = #{code,jdbcType=VARCHAR} and deleted = 0;
  </select>

  <update id="updateByCodeSelective" parameterType="cn.com.xinxin.sass.repository.model.RoleDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null">
        role_type = #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreator != null">
        gmt_creator = #{gmtCreator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdater != null">
        gmt_updater = #{gmtUpdater,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdated != null">
        gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="extension != null">
        extension = #{extension,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where code = #{code,jdbcType=VARCHAR}
  </update>

  <delete id="deleteByCodes"  parameterType="java.util.List">

    delete from role
    where code in
    <foreach collection="roleCodes" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </delete>


  <select id="findRolesByCodes" parameterType="java.util.List" resultMap="BaseResultMapExt">
    select
    <include refid="Base_Column_List_Ext"/>
    from role
    where deleted =0
    and code in
    <foreach collection="roleCodes" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>


  <select id="queryAllRolesByTenantId" resultMap="BaseResultMapExt" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List_Ext"/>
    from role
    where deleted =0
    and tenant_id = #{tenantId,jdbcType=VARCHAR}
  </select>


</mapper>