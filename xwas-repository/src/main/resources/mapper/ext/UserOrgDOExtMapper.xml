<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.xinxin.sass.repository.dao.UserOrgDOMapper">
  <resultMap id="BaseResultMapExt" type="cn.com.xinxin.sass.repository.model.UserOrgDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="gmt_creator" jdbcType="VARCHAR" property="gmtCreator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_updater" jdbcType="VARCHAR" property="gmtUpdater" />
    <result column="gmt_updated" jdbcType="TIMESTAMP" property="gmtUpdated" />
    <result column="extension" jdbcType="VARCHAR" property="extension" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List_Ext">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, tenant_id, org_code, org_name, user_account, user_name, gmt_creator, gmt_created, 
    gmt_updater, gmt_updated, extension, deleted
  </sql>

  <select id="queryUserOrgsByAccount" resultMap="BaseResultMapExt" parameterType="java.lang.String">

    select
    <include refid="Base_Column_List" />
    from user_org
    where deleted = 0
    and user_account = #{account,jdbcType=VARCHAR}

  </select>

  <insert id="insertByBatch" parameterType="java.util.List">
      insert into user_org (tenant_id, org_code,
          org_name, user_account, user_name,
          gmt_creator, gmt_created, gmt_updater,
          gmt_updated, extension
      )
    <foreach collection="lists" item="item" index="index" separator=",">
      values (#{item.tenantId,jdbcType=VARCHAR}, #{item.orgCode,jdbcType=VARCHAR},
      #{item.orgName,jdbcType=VARCHAR}, #{item.userAccount,jdbcType=VARCHAR}, #{item.userName,jdbcType=VARCHAR},
      #{item.gmtCreator,jdbcType=VARCHAR}, #{item.gmtCreated,jdbcType=TIMESTAMP}, #{item.gmtUpdater,jdbcType=VARCHAR},
      #{item.gmtUpdated,jdbcType=TIMESTAMP}, #{item.extension,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
  
  
  <delete id="removeUserOrgRelationByAccount" parameterType="java.lang.String">
    delete from user_org
    where user_account = #{account,jdbcType=VARCHAR}
  </delete>


  <delete id="removeUserOrgRelationByOrgCode" parameterType="java.lang.String">
    delete from user_org
    where org_code = #{orgCode,jdbcType=VARCHAR}
  </delete>


  <delete id="removeUserOrgRelationByAccountList" parameterType="java.util.List">
    delete from user_org
    where user_account in
    <foreach collection="accounts" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>


  <select id="queryUserOrgsByAccountList" resultMap="BaseResultMapExt" parameterType="java.util.List">
    select
    <include refid="Base_Column_List" />
    from user_org
    where deleted = 0
    and user_account in
    <foreach collection="accounts" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </select>

</mapper>