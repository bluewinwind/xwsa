<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.xinxin.sass.repository.dao.RoleResourceMapper">
  <resultMap id="BaseResultMapExt" type="cn.com.xinxin.sass.repository.model.RoleResourceDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="resource_code" jdbcType="VARCHAR" property="resourceCode" />
    <result column="resource_name" jdbcType="VARCHAR" property="resourceName" />
    <result column="gmt_creator" jdbcType="VARCHAR" property="gmtCreator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_updater" jdbcType="VARCHAR" property="gmtUpdater" />
    <result column="gmt_updated" jdbcType="TIMESTAMP" property="gmtUpdated" />
    <result column="extension" jdbcType="VARCHAR" property="extension" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List_Ext">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, role_code,role_name, resource_code,resource_name, gmt_creator, gmt_created, gmt_updater, gmt_updated,
    extension, deleted
  </sql>

  <resultMap id="ResourceMap" type="cn.com.xinxin.sass.repository.model.ResourceDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="resource_type" jdbcType="VARCHAR" property="resourceType" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="authority" jdbcType="VARCHAR" property="authority" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="root" jdbcType="TINYINT" property="root" />
    <result column="extension" jdbcType="VARCHAR" property="extension" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>

  <select id="findResourceByRoleCode" resultMap="ResourceMap" parameterType="java.util.Map">
    select r.id,r.code,r.parent_id,r.resource_type,r.name,r.authority,r.url,r.root,r.extension,r.deleted
    from role_resource rr,resource r
    where rr.role_code = #{roleCode,jdbcType=VARCHAR}
    and rr.resource_code = r.code
    and r.deleted = 0
  </select>

  <select id="findResources" resultMap="ResourceMap" parameterType="java.util.List">
    select r.id,r.code,r.parent_id,r.resource_type,r.name,r.authority,r.url,r.root,r.extension,r.deleted
    from role_resource rr,resource r
    where
    rr.resource_code = r.code
    and r.deleted = 0
    and rr.role_code in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into role_resource (role_code, role_name,resource_code,resource_name, gmt_creator, gmt_updater)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.roleCode,jdbcType=VARCHAR}, #{item.roleName,jdbcType=VARCHAR},
      #{item.resourceCode,jdbcType=VARCHAR},#{item.resourceName,jdbcType=VARCHAR},
      #{item.gmtCreator,jdbcType=VARCHAR},#{item.gmtUpdater,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <select id="findByCondition" resultMap="BaseResultMapExt" parameterType="cn.com.xinxin.sass.repository.model.RoleResourceDO">
    select <include refid="Base_Column_List_Ext"/>
    from role_resource
    where  1=1
    <if test="roleCode != null and roleCode != ''">
      and role_code like concat('%',#{roleCode,jdbcType=VARCHAR},'%')
    </if>
    <if test="roleName != null and roleName != ''">
      and role_name like concat('%',#{roleName,jdbcType=VARCHAR},'%')
    </if>
    <if test="resourceCode != null and resourceCode != ''">
      and resource_code like concat('%',#{resourceCode,jdbcType=VARCHAR},'%')
    </if>
    <if test="resourceName != null and resourceName != ''">
      and resource_name like concat('%',#{resourceName,jdbcType=VARCHAR},'%')
    </if>
    order by gmt_created desc
  </select>


  <select id="queryRolesAndResourcesByRSCode" resultMap="BaseResultMapExt" parameterType="java.lang.String">

    select <include refid="Base_Column_List_Ext"/>
    from role_resource
    where resource_code = #{rsCode,jdbcType=VARCHAR}

  </select>


  <select id="queryRolesAndResourcesByRSCodeList" resultMap="BaseResultMapExt" parameterType="java.util.List">

    select <include refid="Base_Column_List_Ext"/>
    from role_resource
    where resource_code in
    <foreach collection="rsCodeList" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </select>

  <delete id="delete" parameterType="java.util.Map">
    delete from role_resource
    where
    role_code = #{roleCode,jdbcType=VARCHAR}
    and resource_code in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

  <update id="updateByResourceCode" parameterType="cn.com.xinxin.sass.repository.model.RoleResourceDO">
    update role_resource
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="resourceName != null">
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdater != null">
        gmt_updater = #{gmtUpdater,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdated != null">
        gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="extension != null">
        extension = #{extension,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
    </set>
    where resource_code = #{resourceCode,jdbcType=VARCHAR}
  </update>

  <update id="updateByRoleCode" parameterType="cn.com.xinxin.sass.repository.model.RoleResourceDO">
    update role_resource
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="resourceName != null">
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdater != null">
        gmt_updater = #{gmtUpdater,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdated != null">
        gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="extension != null">
        extension = #{extension,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
    </set>
    where role_code = #{roleCode,jdbcType=VARCHAR}
  </update>

  <delete id="deleteByRoleCodes"  parameterType="java.util.List">
    delete from role_resource
    where role_code in
    <foreach collection="roleCodes" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </delete>

</mapper>