<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.xinxin.sass.repository.dao.UserRoleMapper">
  <resultMap id="BaseResultMapExt" type="cn.com.xinxin.sass.repository.model.UserRoleDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="gmt_creator" jdbcType="VARCHAR" property="gmtCreator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_updater" jdbcType="VARCHAR" property="gmtUpdater" />
    <result column="gmt_updated" jdbcType="TIMESTAMP" property="gmtUpdated" />
    <result column="extension" jdbcType="VARCHAR" property="extension" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List_Ext">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, role_code,role_name, user_account, user_name,gmt_creator, gmt_created, gmt_updater, gmt_updated,
    extension, deleted
  </sql>

  <resultMap id="RoleMap" type="cn.com.xinxin.sass.repository.model.RoleDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="role_type" jdbcType="VARCHAR" property="roleType" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="extension" jdbcType="VARCHAR" property="extension" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>

  <select id="findRoleByUserAccount" resultMap="RoleMap" parameterType="java.util.Map">
    select r.id,r.name,r.role_type,r.code,r.extension,r.deleted
    from user_role ur,role r
    where ur.user_account = #{account,jdbcType=VARCHAR}
    and ur.role_code = r.code
    and r.deleted = 0
  </select>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into user_role (role_code, role_name,user_account,user_name,
      gmt_creator, gmt_updater, extension)
    values
     <foreach collection="list" index="index" item="item" separator=",">
       (#{item.roleCode,jdbcType=VARCHAR}, #{item.roleName,jdbcType=VARCHAR}, #{item.userAccount,jdbcType=VARCHAR},#{item.userName,jdbcType=VARCHAR},
       #{item.gmtCreator,jdbcType=VARCHAR}, #{item.gmtUpdater,jdbcType=VARCHAR},
       #{item.extension,jdbcType=VARCHAR}
       )
     </foreach>
  </insert>

  <select id="findByCondition" parameterType="cn.com.xinxin.sass.repository.model.UserRoleDO" resultMap="BaseResultMapExt">
    select
    <include refid="Base_Column_List_Ext" />
    from user_role
    where 1=1
    <if test="roleCode != null and roleCode != ''">
      and role_code like concat('%',#{roleCode,jdbcType=VARCHAR},'%')
    </if>
    <if test="roleName != null and roleName != ''">
      and role_name like concat('%',#{roleName,jdbcType=VARCHAR},'%')
    </if>
    <if test="userAccount != null and userAccount != ''">
      and user_account like concat('%',#{userAccount,jdbcType=VARCHAR},'%')
    </if>
    <if test="userName != null and userName != ''">
      and user_name like concat('%',#{userName,jdbcType=VARCHAR},'%')
    </if>
    order by gmt_created desc
  </select>

  <delete id="deleteByRoleCode" parameterType="string">
    delete from user_role where role_code = #{roleCode}
  </delete>

  <insert id="saveOrUpdate" parameterType="cn.com.xinxin.sass.repository.model.UserRoleDO">
    <selectKey keyProperty="id" resultType="cn.com.xinxin.sass.repository.model.UserRoleDO" order="BEFORE">
      select count(id) as id from user_role where role_code = #{roleCode} and user_account = #{userAccount}
    </selectKey>

    <if test="id == 1">
      update user_role
      set deleted = #{deleted},gmt_updater = #{gmtUpdater}
      where role_code = #{roleCode} and user_account = #{userAccount}
    </if>
    <if test="id == 0">
      insert into user_role
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="roleCode != null">
          role_code,
        </if>
        <if test="roleName != null">
          role_name,
        </if>
        <if test="userAccount != null">
          user_account,
        </if>
        <if test="userName != null">
          user_name,
        </if>
        <if test="gmtCreator != null">
          gmt_creator,
        </if>
        <if test="gmtCreated != null">
          gmt_created,
        </if>
        <if test="gmtUpdater != null">
          gmt_updater,
        </if>
        <if test="gmtUpdated != null">
          gmt_updated,
        </if>
        <if test="extension != null">
          extension,
        </if>
        <if test="deleted != null">
          deleted,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="roleCode != null">
          #{roleCode,jdbcType=VARCHAR},
        </if>
        <if test="roleName != null">
          #{roleName,jdbcType=VARCHAR},
        </if>
        <if test="userAccount != null">
          #{userAccount,jdbcType=VARCHAR},
        </if>
        <if test="userName != null">
          #{userName,jdbcType=VARCHAR},
        </if>
        <if test="gmtCreator != null">
          #{gmtCreator,jdbcType=VARCHAR},
        </if>
        <if test="gmtCreated != null">
          #{gmtCreated,jdbcType=TIMESTAMP},
        </if>
        <if test="gmtUpdater != null">
          #{gmtUpdater,jdbcType=VARCHAR},
        </if>
        <if test="gmtUpdated != null">
          #{gmtUpdated,jdbcType=TIMESTAMP},
        </if>
        <if test="extension != null">
          #{extension,jdbcType=VARCHAR},
        </if>
        <if test="deleted != null">
          #{deleted,jdbcType=TINYINT},
        </if>
      </trim>
    </if>
  </insert>

  <delete id="deleteByAccounts"  parameterType="java.util.List">

    delete from user_role
    where user_account in
    <foreach collection="accounts" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </delete>

  <delete id="deleteByRoleCodes"  parameterType="java.util.List">

    delete from user_role
    where role_code in
    <foreach collection="roleCodes" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </delete>


  <update id="updateByRoleCode" parameterType="cn.com.xinxin.sass.repository.model.UserRoleDO">
    update user_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdater != null">
        gmt_updater = #{gmtUpdater,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdated != null">
        gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="extension != null">
        extension = #{extension,jdbcType=VARCHAR},
      </if>
    </set>
    where role_code = #{roleCode,jdbcType=VARCHAR}
  </update>

  <update id="updateByUserAccount" parameterType="cn.com.xinxin.sass.repository.model.UserRoleDO">
    update user_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdater != null">
        gmt_updater = #{gmtUpdater,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdated != null">
        gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="extension != null">
        extension = #{extension,jdbcType=VARCHAR},
      </if>
    </set>
    where user_account = #{userAccount,jdbcType=VARCHAR}
  </update>

  <select id="countByRoleCode" resultType="java.lang.Integer" parameterType="java.util.List">
    select count(id) from user_role where role_code in
    <foreach collection="roleCodes" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>


</mapper>