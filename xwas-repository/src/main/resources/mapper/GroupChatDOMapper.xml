<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~ Copyright 2020 www.xinxindigits.com
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of this software
  ~ and associated documentation files (the "Software"),to deal in the Software without restriction,
  ~ including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
  ~ and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
  ~ subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice
  ~ shall be included in all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  ~ INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  ~ PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  ~ HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  ~ WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  ~
  ~ Redistribution and selling copies of the software are prohibited, only if the authorization from xinxin digits
  ~ was obtained.Neither the name of the xinxin digits; nor the names of its contributors may be used to
  ~ endorse or promote products derived from this software without specific prior written permission.
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.xinxin.sass.repository.dao.GroupChatDOMapper">
  <resultMap id="BaseResultMap" type="cn.com.xinxin.sass.repository.model.GroupChatDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="chat_name" jdbcType="VARCHAR" property="chatName"/>
    <result column="chat_id" jdbcType="VARCHAR" property="chatId" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="extension" jdbcType="VARCHAR" property="extension" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_creator" jdbcType="VARCHAR" property="gmtCreator" />
    <result column="gmt_updated" jdbcType="TIMESTAMP" property="gmtUpdated" />
    <result column="gmt_updater" jdbcType="VARCHAR" property="gmtUpdater" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
    <result column="notice" jdbcType="LONGVARCHAR" property="notice" />
    <result column="member_list" jdbcType="LONGVARCHAR" property="memberList" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, tenant_id, chat_id, owner, create_time, status, task_id, extension, gmt_created, 
    gmt_creator, gmt_updated, gmt_updater, deleted, notice, member_list, chat_name
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from group_chat
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from group_chat
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.com.xinxin.sass.repository.model.GroupChatDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into group_chat (id, tenant_id, chat_id, 
      owner, create_time, status, 
      task_id, extension, gmt_created, 
      gmt_creator, gmt_updated, gmt_updater, 
      deleted, notice, member_list,chat_name
      )
    values (#{id,jdbcType=BIGINT}, #{tenantId,jdbcType=VARCHAR}, #{chatId,jdbcType=VARCHAR}, 
      #{owner,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{taskId,jdbcType=VARCHAR}, #{extension,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, 
      #{gmtCreator,jdbcType=VARCHAR}, #{gmtUpdated,jdbcType=TIMESTAMP}, #{gmtUpdater,jdbcType=VARCHAR}, 
      #{deleted,jdbcType=TINYINT}, #{notice,jdbcType=LONGVARCHAR}, #{memberList,jdbcType=LONGVARCHAR},
    #{chatName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.xinxin.sass.repository.model.GroupChatDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into group_chat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="chatName != null">
        chat_name,
      </if>
      <if test="chatId != null">
        chat_id,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="extension != null">
        extension,
      </if>
      <if test="gmtCreated != null">
        gmt_created,
      </if>
      <if test="gmtCreator != null">
        gmt_creator,
      </if>
      <if test="gmtUpdated != null">
        gmt_updated,
      </if>
      <if test="gmtUpdater != null">
        gmt_updater,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="notice != null">
        notice,
      </if>
      <if test="memberList != null">
        member_list,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="chatName != null">
        #{chatName,jdbcType=VARCHAR},
      </if>
      <if test="chatId != null">
        #{chatId,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="extension != null">
        #{extension,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreator != null">
        #{gmtCreator,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdated != null">
        #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdater != null">
        #{gmtUpdater,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="notice != null">
        #{notice,jdbcType=LONGVARCHAR},
      </if>
      <if test="memberList != null">
        #{memberList,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.xinxin.sass.repository.model.GroupChatDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update group_chat
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="chatName != null">
        chat_name = #{chatName,jdbcType=VARCHAR},
      </if>
      <if test="chatId != null">
        chat_id = #{chatId,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        owner = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="extension != null">
        extension = #{extension,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreator != null">
        gmt_creator = #{gmtCreator,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdated != null">
        gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdater != null">
        gmt_updater = #{gmtUpdater,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="notice != null">
        notice = #{notice,jdbcType=LONGVARCHAR},
      </if>
      <if test="memberList != null">
        member_list = #{memberList,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.xinxin.sass.repository.model.GroupChatDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update group_chat
    set tenant_id = #{tenantId,jdbcType=VARCHAR},
    chat_name = #{chatName,jdbcType=VARCHAR},
      chat_id = #{chatId,jdbcType=VARCHAR},
      owner = #{owner,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=VARCHAR},
      extension = #{extension,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_creator = #{gmtCreator,jdbcType=VARCHAR},
      gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      gmt_updater = #{gmtUpdater,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=TINYINT},
      notice = #{notice,jdbcType=LONGVARCHAR},
      member_list = #{memberList,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>